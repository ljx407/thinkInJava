package holding.exercise;import java.util.ArrayList;import java.util.Collections;import java.util.LinkedList;import java.util.List;import java.util.ListIterator;import java.util.Random;import org.junit.Before;import org.junit.Test;import static util.PrintUtil.*; public class Ex12 {		List<Integer> lists = null ;	List<Integer> listsCopy = null;		@Before	public void before() {		lists = new ArrayList<Integer>() ;		listsCopy = new LinkedList<Integer>();				Random random = new Random();		for(int i=0; i<10; i++) {			lists.add(random.nextInt(20));		}		println(lists);	}		@Test	public void reverseList() {		Collections.reverse(lists);				listsCopy = new ArrayList<Integer>(lists) ;		println(listsCopy);	}		@Test	public void reverseList1() {		ListIterator<Integer> listIterator = lists.listIterator(lists.size());				while(listIterator.hasPrevious()) {			Integer i = listIterator.previous();			listsCopy.add(i);		}				println(listsCopy);	}		@Test	public void reverseList2() {		listsCopy = new ArrayList<Integer>(lists);		ListIterator<Integer> listIteratorCopy = listsCopy.listIterator(listsCopy.size());		ListIterator<Integer> listIterator = lists.listIterator();				while(listIteratorCopy.hasPrevious()) {			listIteratorCopy.previous();			listIteratorCopy.set(listIterator.next());		}				println(listsCopy);	}}